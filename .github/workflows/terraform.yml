name: Guest List Terraform Deploy (Dev Only)

on:
  push:
    branches: [sahar-feature]
    paths:
      - '**.tf'
      - '**.tfvars'
      - '**.yml'
      - '**.yaml'
      - '.github/workflows/**'
  pull_request:
    branches: [sahar-feature]
    paths:
      - '**.tf'
      - '**.tfvars'
      - '**.yml'
      - '**.yaml'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options: [plan, apply, destroy]

env:
  TF_VERSION: "1.9.8"
  TF_LOG: INFO
  AWS_DEFAULT_REGION: us-east-1

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials (Dev)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          audience: sts.amazonaws.com
          output-env-credentials: true

      - name: Detect Terraform Directory
        id: find-dir
        run: |
          if [ -f "./main.tf" ]; then
            echo "dir=." >> $GITHUB_OUTPUT
          elif [ -f "./terraform/main.tf" ]; then
            echo "dir=terraform" >> $GITHUB_OUTPUT
          elif [ -f "./infrastructure/main.tf" ]; then
            echo "dir=infrastructure" >> $GITHUB_OUTPUT
          else
            tfdir=$(find . -name "*.tf" -type f -exec dirname {} \; | head -1)
            if [ -z "$tfdir" ]; then
              tfdir="."
            fi
            echo "dir=$tfdir" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Init
        working-directory: ${{ steps.find-dir.outputs.dir }}
        run: terraform init

      - name: Terraform Plan
        if: github.event.inputs.action == 'plan' || github.event_name != 'workflow_dispatch'
        working-directory: ${{ steps.find-dir.outputs.dir }}
        run: |
          if [ -f "dev.tfvars" ]; then
            terraform plan -var-file="dev.tfvars" -out=tfplan-dev -no-color
          else
            terraform plan -var="environment=dev" -out=tfplan-dev -no-color
          fi

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        working-directory: ${{ steps.find-dir.outputs.dir }}
        run: |
          if [ -f "tfplan-dev" ]; then
            terraform apply "tfplan-dev"
          elif [ -f "dev.tfvars" ]; then
            terraform apply -var-file="dev.tfvars" -auto-approve
          else
            terraform apply -var="environment=dev" -auto-approve
          fi

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        working-directory: ${{ steps.find-dir.outputs.dir }}
        run: |
          if [ -f "dev.tfvars" ]; then
            terraform destroy -var-file="dev.tfvars" -auto-approve
          else
            terraform destroy -var="environment=dev" -auto-approve
          fi
