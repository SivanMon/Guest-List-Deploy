name: Terraform Apply

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1                     # <-- change if needed
  STATE_BUCKET: guest-list-terraform-state-dvir  # <-- pick a unique bucket name
  STATE_KEY: envs/prod/terraform.tfstate

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/github-terraform   # <-- your role
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # -------- Phase 1: create the bucket with local backend --------
      - name: Terraform Init (local backend)
        run: terraform init

      - name: Create state bucket only
        run: terraform apply -auto-approve -var="state_bucket_name=${STATE_BUCKET}" -var="region=${AWS_REGION}" -target=aws_s3_bucket.tf_state

      # You can optionally apply the rest of bucket hardening pre-migration:
      - name: Harden state bucket (optional pre-migration)
        run: terraform apply -auto-approve -var="state_bucket_name=${STATE_BUCKET}" -var="region=${AWS_REGION}" \
             -target=aws_s3_bucket_versioning.versioning \
             -target=aws_s3_bucket_server_side_encryption_configuration.encryption \
             -target=aws_s3_bucket_public_access_block.pab \
             -target=aws_s3_bucket_lifecycle_configuration.lc

      # -------- Phase 2: switch to S3 backend and migrate local state --------
      - name: Write backend.hcl
        run: |
          cat > backend.hcl <<EOF
          bucket               = "${STATE_BUCKET}"
          key                  = "${STATE_KEY}"
          region               = "${AWS_REGION}"
          encrypt              = true
          use_lockfile         = true
          workspace_key_prefix = "envs"
          EOF

      - name: Re-init to S3 backend (migrate state)
        run: terraform init -reconfigure -backend-config=backend.hcl

      # -------- Phase 3: regular plan/apply using the remote S3 state --------
      - name: Terraform Plan
        run: terraform plan -out=tfplan -var="state_bucket_name=${STATE_BUCKET}" -var="region=${AWS_REGION}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
